gather(Metric, Value, -Strategy)
read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1)
winter_run_results <- read_excel('data-raw/2021_winter-run-simulation-results.xlsx', sheet = "Winter-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy)
winter_run_results
# DSM Results Data -------------------------------------------------------------
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy)
spring_run_results <- read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy)
winter_run_results <- read_excel('data-raw/2021_winter-run-simulation-results.xlsx', sheet = "Winter-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy)
fall_run_results
fall_run_results
# DSM Results Data -------------------------------------------------------------
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy)
fall_run_results
# DSM Results Data -------------------------------------------------------------
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(run = "Fall",
version = 2021,
strategy = Strategy,
metric = Metric,
value = Value)
fall_run_results
# DSM Results Data -------------------------------------------------------------
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
fall_run_results
spring_run_results <- read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Spring",
version = 2021)
winter_run_results <- read_excel('data-raw/2021_winter-run-simulation-results.xlsx', sheet = "Winter-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Winter",
version = 2021)
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
dsm_results_2021
dsm_results_2021$run %>% unique()
# TODO add in real 2019
dsm_results_2019 <- bind_rows(fall_run_results, spring_run_results, winter_run_results) %>%
mutate(version = 2019)
# Combine 2019 and 2021
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
# Combine 2019 and 2021 data
dsm_results <- nimd_rows(dsm_results_2019, dsm_results_2021)
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021)
write_rds(dsm_results, "data/dsm_results.rds")
## DSM Results -----------------------------------------------------------------
dsm_results <- read_rds("data/dsm_results.rds")
dsm_results <- read_rds('data/dsm_results.rds')
dsm_results <- read_rds('data/dsm_results.rds') %>%
filter(run == "Fall",
metric == "Juvenile Biomass Utility Score")
dsm_results
dsm_results <- read_rds('data/dsm_results.rds') %>%
filter(run == "Fall",
metric == "Juvenile Biomass Utility Score",
version == 2021)
dsm_results
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text')
?plotly
?plot_ly()
?layout()
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = metric) %>%
layout(yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = ~metric) %>%
layout(yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = dsm_results$metric) %>%
layout(yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = dsm_results$metric[1]) %>%
layout(yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = "Metric") %>%
layout(yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text',
title = "Metric")
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
showlegend = TRUE, barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='')),
barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
xaxis = "Utility Score",
barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
x = "Utility Score",
barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
xaxos = list(title = list(text ='Utility Score')),
barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
dsm_results %>%
plot_ly(y = ~strategy, x = ~value, type = "bar",
orientation = 'h',
hoverinfo = 'text') %>%
layout(title = "Metric",
yaxis = list(title = list(text ='')),
xaxis = list(title = list(text ='Utility Score')),
barmode = 'stack',
legend = list(orientation = 'h')) %>%
config(displayModeBar = FALSE)
# Filter based on run and
selected_results <- reactive({
dsm_results %>% filter(run == input$Run,
metric == input$Metric)
})
runApp()
runApp()
?checkboxInput
runApp()
runApp()
library(shiny)
library(plotly)
library(DT)
set.seed(100)
data <- data.frame(A=sample(c('a1','a2','a3'),10,replace=T),
B=1:10,
C=11:20,
D=21:30)
shinyApp(
ui = fluidPage(
plotlyOutput("trace_plot"),
DT::dataTableOutput('tbl')),
server = function(input, output) {
output$trace_plot <- renderPlotly({
plot_ly(data, x=~A,y=~B,z=~C, source = "subset") %>% add_histogram2d()})
output$tbl <- renderDataTable({
event.data <- event_data("plotly_click", source = "subset")
if(is.null(event.data) == T) return(NULL)
print(event.data[ ,c(3:4)])
})
}
)
runApp()
?event_data
runApp()
print(selected_strategy())
runApp()
runApp()
withMathJax()
?withMathJax()
?helpText()
runApp()
shiny::runApp()
runApp()
runApp()
# DSM Results Data -------------------------------------------------------------
# Fall Run
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
fall_run_results
# DSM Results Data -------------------------------------------------------------
# Fall Run
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
library(DSMscenario)
library(DSMscenario)
library(DSMscenario)
library(DSMscenario)
library(DSMscenario)
library(DSMscenario)
library(tidyverse)
library(readxl)
# DSM Results Data -------------------------------------------------------------
# Fall Run
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
fall_run_results
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = as.factor(Strategy),
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
fall_run_results
# DSM Results Data -------------------------------------------------------------
# Fall Run
order <- c(1:13)
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = as.factor(Strategy),
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
# Spring Run
spring_run_results <- read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = as.factor(Strategy),
metric = Metric,
value = Value,
run = "Spring",
version = 2021)
# Winter Run
winter_run_results <- read_excel('data-raw/2021_winter-run-simulation-results.xlsx', sheet = "Winter-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = as.factor(Strategy),
metric = Metric,
value = Value,
run = "Winter",
version = 2021)
# TODO add in real 2019
dsm_results_2019 <- bind_rows(fall_run_results, spring_run_results, winter_run_results) %>%
mutate(version = 2019)
# Combine 2021 data
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021)
write_rds(dsm_results, "data/dsm_results.rds")
runApp()
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = as.factor(Strategy, levels = order),
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
library(DSMscenario)
library(tidyverse)
library(readxl)
# DSM Results Data -------------------------------------------------------------
# Fall Run
fall_run_results <- read_excel('data-raw/2021_fall-run-simulation-results.xlsx', sheet = "Fall-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Fall",
version = 2021)
# Spring Run
spring_run_results <- read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Spring",
version = 2021)
# Winter Run
winter_run_results <- read_excel('data-raw/2021_winter-run-simulation-results.xlsx', sheet = "Winter-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = Strategy,
metric = Metric,
value = Value,
run = "Winter",
version = 2021)
# TODO add in real 2019
dsm_results_2019 <- bind_rows(fall_run_results, spring_run_results, winter_run_results) %>%
mutate(version = 2019)
# Combine 2021 data
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021)
write_rds(dsm_results, "data/dsm_results.rds")
# Strategies -------------------------------------------------------------------
# Create strategies
create_scenario_df <- function(number) {
scenario <- bind_rows(
as_tibble(scenarios[[number]]$spawn) %>%
mutate(watershed = factor(DSMscenario::watershed_labels, levels = DSMscenario::watershed_labels),
action_type = "spawn"),
as_tibble(scenarios[[number]]$inchannel) %>%
mutate(watershed = factor(DSMscenario::watershed_labels, levels = DSMscenario::watershed_labels),
action_type = "inchannel"),
as_tibble(scenarios[[number]]$floodplain) %>%
mutate(watershed = factor(DSMscenario::watershed_labels, levels = DSMscenario::watershed_labels),
action_type = "floodplain"),
as_tibble(scenarios[[number]]$survival) %>%
mutate(watershed = factor(DSMscenario::watershed_labels, levels = DSMscenario::watershed_labels),
action_type = "survival")
) %>%
gather(year, units_of_effort, -action_type, -watershed)  %>%
mutate(units_of_effort = ifelse(is.na(units_of_effort), 0, units_of_effort),
scenario = number)
}
nums = c("ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE",
"TEN", "ELEVEN", "TWELVE", "THIRTEEN")
scenario_data <- purrr::map_df(nums, create_scenario_df)
write_rds(scenario_data, "data/scenario_data.rds")
# Spring Run
spring_run_results <- read_excel('data-raw/2021_spring-run-simulation-results.xlsx', sheet = "Spring-run_Summary", skip = 1) %>%
gather(Metric, Value, -Strategy) %>%
transmute(strategy = factor(Strategy, levels = c(1:13)),
metric = Metric,
value = Value,
run = "Spring",
version = 2021)
spring_run_results
runApp()
runApp()
xform
xform <- list(categoryorder = "array",
categoryarray = rev(c("Baseline", "Strategy 01", "Strategy 02", "Strategy 03",
"Strategy 04", "Strategy 05", "Strategy 06", "Strategy 07",
"Strategy 08", "Strategy 09", "Strategy 10", "Strategy 11",
"Strategy 12", "Strategy 13")))
xform
runApp()
runApp()
runApp()
dput(xform)
runApp()
dsm_results_2021
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = as.factor(strategy, order = c(1:13)))
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = as.factor(strategy, levels= c(1:13)))
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = as.factor(strategy, levels = order))
?as.factor()
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = factor(strategy, levels = order))
dsm_results
order <- c(
"Baseline" = 1,
"Strategy 01" = 2,
"Strategy 02" = 3,
"Strategy 03" = 4,
"Strategy 04" = 5,
"Strategy 05" = 6,
"Strategy 06" = 7,
"Strategy 07" = 8,
"Strategy 08" = 9,
"Strategy 09" = 10,
"Strategy 10" = 11,
"Strategy 11" = 12,
"Strategy 12" = 13,
"Strategy 13" = 14
)
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = factor(strategy, levels = order))
dsm_results
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = as.ordered(strategy, levels = order))
# Combine 2021 data
dsm_results_2021 <- bind_rows(fall_run_results, spring_run_results, winter_run_results)
dsm_results_2021
order <- c(
"Baseline",
"Strategy 01",
"Strategy 02",
"Strategy 03",
"Strategy 04",
"Strategy 05",
"Strategy 06",
"Strategy 07",
"Strategy 08",
"Strategy 09",
"Strategy 10",
"Strategy 11",
"Strategy 12",
"Strategy 13"
)
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = as.ordered(strategy, levels = order))
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = factor(strategy, levels = order))
dsm_results
write_rds(dsm_results, "data/dsm_results.rds")
runApp()
order <- rev(c(
"Baseline",
"Strategy 01",
"Strategy 02",
"Strategy 03",
"Strategy 04",
"Strategy 05",
"Strategy 06",
"Strategy 07",
"Strategy 08",
"Strategy 09",
"Strategy 10",
"Strategy 11",
"Strategy 12",
"Strategy 13"
))
order
# Combine 2019 and 2021 data
dsm_results <- bind_rows(dsm_results_2019, dsm_results_2021) %>%
mutate(strategy = factor(strategy, levels = order))
write_rds(dsm_results, "data/dsm_results.rds")
runApp()
runApp()
runApp()
## Strategies tab --------------------------------------------------------------
strategy_popup_labels <- strategy_numbers[-1]
popup_label_numbers <- c('One', 'Two', 'Three',
'Four', 'Five', 'Six',
'Seven', 'Eight', 'Nine',
'Ten', 'Eleven', 'Twelve',
'Thirteen')
runApp()
